version: '3.8'

services:
  # Frontend (React/Vite)
  frontend-staging:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    container_name: yla-frontend-staging
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8001/api
    depends_on:
      - backend-staging
    networks:
      - yla-staging

  # Backend (Laravel)
  backend-staging:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: yla-backend-staging
    ports:
      - "8001:80"
    environment:
      - APP_ENV=staging
      - APP_DEBUG=false
      - APP_URL=http://localhost:8001
      - DB_CONNECTION=mysql
      - DB_HOST=mysql-staging
      - DB_PORT=3306
      - DB_DATABASE=yla_staging
      - DB_USERNAME=yla_user
      - DB_PASSWORD=staging_password
      - MAIL_MAILER=log
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=redis-staging
    volumes:
      - ./backend/storage:/var/www/html/storage
      - ./backend/.env.staging:/var/www/html/.env
    depends_on:
      - mysql-staging
      - redis-staging
    networks:
      - yla-staging

  # MySQL Database
  mysql-staging:
    image: mysql:8.0
    container_name: yla-mysql-staging
    environment:
      - MYSQL_ROOT_PASSWORD=root_staging_password
      - MYSQL_DATABASE=yla_staging
      - MYSQL_USER=yla_user
      - MYSQL_PASSWORD=staging_password
    volumes:
      - mysql_staging_data:/var/lib/mysql
      - ./database/staging-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - yla-staging

  # Redis for caching and sessions
  redis-staging:
    image: redis:7-alpine
    container_name: yla-redis-staging
    ports:
      - "6380:6379"
    volumes:
      - redis_staging_data:/data
    networks:
      - yla-staging

  # Payload CMS
  payload-staging:
    build:
      context: ./payload
      dockerfile: Dockerfile
    container_name: yla-payload-staging
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - PAYLOAD_SECRET=staging_payload_secret_key_here
      - MONGODB_URI=mongodb://mongo-staging:27017/yla-payload-staging
      - PAYLOAD_PUBLIC_SERVER_URL=http://localhost:3002
    depends_on:
      - mongo-staging
    networks:
      - yla-staging

  # MongoDB for Payload CMS
  mongo-staging:
    image: mongo:6
    container_name: yla-mongo-staging
    ports:
      - "27018:27017"
    volumes:
      - mongo_staging_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=yla-payload-staging
    networks:
      - yla-staging

  # Nginx reverse proxy
  nginx-staging:
    image: nginx:alpine
    container_name: yla-nginx-staging
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/staging.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend-staging
      - backend-staging
      - payload-staging
    networks:
      - yla-staging

volumes:
  mysql_staging_data:
  redis_staging_data:
  mongo_staging_data:

networks:
  yla-staging:
    driver: bridge